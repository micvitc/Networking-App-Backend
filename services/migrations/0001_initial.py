# Generated by Django 4.2.4 on 2023-08-29 08:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=100)),
                ('program', models.CharField(max_length=100)),
                ('department_school', models.CharField(choices=[('SCOPE', 'School of Computer Science and Engineering-SCOPE'), ('SAS', 'School of Advanced Sciences-SAS'), ('SSL', 'School of Social Sciences and Languages-SSL'), ('SENSE', 'School of Electronics Engineering-SENSE'), ('SELECT', 'School of Electrical Engineering-SELECT'), ('SMEC', 'School of Mechanical Engineering-SMEC'), ('SCE', 'School of Civil Engineering-SCE'), ('VITBS', 'VIT Business School-VITBS'), ('VITSOL', 'VIT School of Law-VITSOL'), ('VFIT', 'VIT Fashion Institute of Technology-VFIT'), ('Other Organization', 'Other Organization'), ('Unauthorized', 'Unauthorized')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='HashTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InterestTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('admitted_year', models.CharField(max_length=200, null=True)),
                ('status', models.CharField(choices=[('Alumini', 'Alumini'), ('Current', 'Current'), ('Faculty', 'Faculty')], default='Current', max_length=100)),
                ('education_level', models.CharField(max_length=100)),
                ('about', models.TextField()),
                ('profile_photo', models.URLField()),
                ('privacy', models.CharField(choices=[('Public', 'Public'), ('Private', 'Private')], default='Public', max_length=100)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('linkedIn', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('slug', models.SlugField(blank=True)),
                ('dept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.department')),
                ('interests', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='services.InterestTag', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='SkillTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_tag', to='services.profile')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='skills',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='services.SkillTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=250)),
                ('image_or_video', models.URLField()),
                ('date_posted', models.DateField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.profile')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='services.HashTag', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.post')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.profile')),
            ],
        ),
        migrations.AddField(
            model_name='interesttag',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interest_tag', to='services.profile'),
        ),
        migrations.AddField(
            model_name='interesttag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag'),
        ),
        migrations.AddField(
            model_name='hashtag',
            name='content_object',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hash_tag', to='services.post'),
        ),
        migrations.AddField(
            model_name='hashtag',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag'),
        ),
        migrations.CreateModel(
            name='Following',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_followed', models.DateField(auto_now_add=True)),
                ('request_status', models.CharField(choices=[('Pending', 'Pending'), ('Accepted', 'Accepted')], max_length=100)),
                ('slug', models.SlugField(blank=True)),
                ('following_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following_profile', to='services.profile')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='services.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField()),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField()),
                ('date_commented', models.DateField(auto_now_add=True)),
                ('slug', models.SlugField(blank=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.post')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.profile')),
            ],
        ),
    ]
